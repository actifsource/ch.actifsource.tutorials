/*********************************************************************
	SYSTEM LampSystem
	IMPLEMENTATION LampSystemImplementation
	Header File for CIP SHELL sLampSystemUnit
	Filename: sLampSystemUnit.h
	generated by CIP Tool(R)
	
	activated code options:
		C code
		use message interface
			naming option: use default prefix
		use postfix
			LampSystemUnit 
		enable PENDING_ information
		'unsigned char' for delays
*********************************************************************/

#if !defined(_sLampSystemUnit_hLampSystemUnit_)
	#define _sLampSystemUnit_hLampSystemUnit_

/* Code Option Constants */

#if defined(_EINPUT__)
	#undef _EINPUT__
#endif 

#if !defined(_PENDING__)
	#define _PENDING__
#endif 

/* Channel Enumerations */

#if !defined(_eCHAN_LampSystemUnit_)
	#define _eCHAN_LampSystemUnit_

	enum eCHAN_LampSystemUnit
		{C_Button = 1, C_Lamp = 2};

#endif // _eCHAN_LampSystemUnit_

/*********************************************************************
	CODE  GENERATION  FEATURE
	This global message enumeration can be used 
	for implementation purposes.
*********************************************************************/

enum eMSG_LampSystemUnitLampSystemUnit
	{F_C1_Press_ = 1, F_C1_Release_ = 2, F_C2_Dark_ = 3, F_C2_Bright_ = 4};

/********************************************************************/

#if !defined(_eMSG_Button_)
	#define _eMSG_Button_

	enum eMSG_Button
		{C1_Press = 1, C1_Release = 2};

#endif // _eMSG_Button_

#if !defined(_eMSG_Lamp_)
	#define _eMSG_Lamp_

	enum eMSG_Lamp
		{C2_Dark = 1, C2_Bright = 2};

#endif // _eMSG_Lamp_

/* Input Interface Type */

struct tIN_LampSystemUnit
{
	void (*C1_Press)(void);
	void (*C1_Release)(void);
};

/* Output Interface Type */

struct tOUT_LampSystemUnit
{
	void (*C2_Dark)(void);
	void (*C2_Bright)(void);
};


/* Trigger Interface Type */

#if !defined(_tPENDING__)
	#define _tPENDING__
	
	struct tPENDING_
	{
		int ANY_;	/* boolean indicating any pending transitions */
		int CHAIN_;	/* boolean indicating pending CHAIN_ */
		int TIMEUP_;	/* boolean indicating pending TIMEUP_ */
		int READ_;	/* boolean indicating buffered internal message */
		int AUTO_;	/* boolean indicating reading AUTO_ */
	};
	
#endif // _tPENDING__

struct tTRG_LampSystemUnit
{
	void (*TICK_) (void);		/* increment CIP MACHINE time */
	void (*STEP_) (void);		/*  trigger CIP MACHINE transition */
	void (*CHAIN_) (void);		/* trigger pending chain CIP MACHINE transition */
	void (*TIMEUP_) (void);		/* trigger pending timeup CIP MACHINE transition */
	void (*READ_) (void);		/* trigger CIP MACHINE to read from internal message buffer */
	void (*AUTO_) (void);		/* trigger pending auto CIP MACHINE transition */
	struct tPENDING_ PENDING_;		/* information on pending transitions */
};

/* External Interface Declarations */

extern struct tIN_LampSystemUnit IN_LampSystemUnit;		/* Input Channel Interface defined in sLampSystemUnit.c */
extern struct tOUT_LampSystemUnit OUT_LampSystemUnit;		/* Output Channel Interface defined in sLampSystemUnit.c */
extern struct tTRG_LampSystemUnit TRG_LampSystemUnit;		/* Trigger Interface defined in sLampSystemUnit.c */

/* Unit Initialization Function, defined in mLampSystemUnit.c
	called by User to initialize CIP Machine
		returning 1 if successful
		returning 0 if failed */

int fINIT_LampSystemUnit(void);

/* User defined Initialization Function for CIP Shell Interface Initialization 
	called by Unit Initialization Function */

void iMSG_LampSystemUnit(void);

#endif // _sLampSystemUnit_hLampSystemUnit_

/*********************************************************************
	End of CIP UNIT Header File for CIP SHELL sLampSystemUnit
*********************************************************************/
// Actifsource ID=[b7934a9b-259a-11e1-ae2f-a14f3e396de6,47a975e5-45f8-11e2-a9e9-277eb93c19ba,534e318e-45fa-11e2-a9e9-277eb93c19ba,7884c17a-45fb-11e2-a9e9-277eb93c19ba,534f9122-45fa-11e2-a9e9-277eb93c19ba,53507b87-45fa-11e2-a9e9-277eb93c19ba,3VA1Oo9Mi0VoBQC23rnyLygiEbQ=]
